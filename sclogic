contract Contract is ERC721Base {
    // Mapping of token ID to nickname string
    mapping (uint => string) public nicknames;

    // Set a new nickname for a token
    function setNickname(uint _tokenId, string calldata _nickname) public {
        nicknames[_tokenId] = _nickname;
    }

    // ... constructor
}
contract Contract is ERC721Base {
    // Mapping of token ID to nickname string
    mapping (uint => string) public nicknames;

    // Set a new nickname for a token
    function setNickname(uint _tokenId, string calldata _nickname) public {
        nicknames[_tokenId] = _nickname;
    }

    // ... constructor
}
import "@thirdweb-dev/contracts/extension/PermissionsEnumerable.sol";

contract Contract is ERC721Base, PermissionsEnumerable {

contract Contract is ERC721Base, PermissionsEnumerable {

bytes32 public constant NICKNAMER_ROLE = keccak256("NICKNAMER_ROLE");

// Set a new nickname for a token
function setNickname(uint _tokenId, string calldata _nickname) public onlyRole(NICKNAMER_ROLE) {
    nicknames[_tokenId] = _nickname;
}

    constructor(
        string memory _name,
        string memory _symbol,
        address _royaltyRecipient,
        uint128 _royaltyBps
    )
        ERC721Base(
            _name,
            _symbol,
            _royaltyRecipient,
            _royaltyBps
        )
    {
        // Give the contract deployer these roles when the contract is deployed.
        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);
        _setupRole(NICKNAMER_ROLE, msg.sender);
    }
